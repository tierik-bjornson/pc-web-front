pipeline {
    agent any

    environment {
        NODEJS_VERSION = '18'  // ƒê·∫£m b·∫£o d√πng Node.js 18
    }

    stages {
        stage('Checkout') {
            steps {
                deleteDir()  // X√≥a th∆∞ m·ª•c c≈© tr∆∞·ªõc khi pull code m·ªõi
                checkout scm
                sh 'ls -la'  // Ki·ªÉm tra file sau khi clone
            }
        }

        stage('Setup Node.js') {
            steps {
                script {
                    def nodeHome = tool name: 'NodeJS_18', type: 'jenkins.plugins.nodejs.tools.NodeJSInstallation'
                    env.PATH = "${nodeHome}/bin:${env.PATH}"
                }
                sh 'node -v'  // Debug ki·ªÉm tra phi√™n b·∫£n Node.js
                sh 'npm -v'   // Ki·ªÉm tra npm
            }
        }

        stage('Install Dependencies') {
            parallel {
                stage('Admin - Install') {
                    steps {
                        dir('admin') {
                            sh 'npm install'
                        }
                    }
                }
                stage('User - Install') {
                    steps {
                        dir('user') {
                            sh 'npm install'
                        }
                    }
                }
            }
        }

        stage('Lint Code') {
            parallel {
                stage('Admin - Lint') {
                    steps {
                        dir('admin') {
                            sh 'npm run lint || true'  // Kh√¥ng fail n·∫øu lint l·ªói
                        }
                    }
                }
                stage('User - Lint') {
                    steps {
                        dir('user') {
                            sh 'npm run lint || true'
                        }
                    }
                }
            }
        }

        stage('Run Tests') {
            parallel {
                stage('Admin - Test') {
                    steps {
                        dir('admin') {
                            sh 'npm test || true'  // Kh√¥ng fail n·∫øu test l·ªói
                        }
                    }
                }
                stage('User - Test') {
                    steps {
                        dir('user') {
                            sh 'npm test || true'
                        }
                    }
                }
            }
        }

        stage('Build Project') {
            parallel {
                stage('Admin - Build') {
                    steps {
                        dir('admin') {
                            sh 'npm run build'
                        }
                    }
                }
                stage('User - Build') {
                    steps {
                        dir('user') {
                            sh 'npm run build'
                        }
                    }
                }
            }
        }

        stage('Deploy') {
            steps {
                echo 'üîÑ Deploying Application...'
                // Th√™m l·ªánh deploy c·ªßa b·∫°n ·ªü ƒë√¢y (v√≠ d·ª•: copy file, ch·∫°y Docker, Kubernetes...)
            }
        }
    }

    post {
        success {
            echo '‚úÖ Build th√†nh c√¥ng!'
        }
        failure {
            echo '‚ùå Build th·∫•t b·∫°i. Ki·ªÉm tra logs!'
        }
    }
}
