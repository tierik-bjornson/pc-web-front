pipeline {
    agent any
    tools {
        nodejs "Node18"
    }
    environment {
        REGISTRY = 'localhost:80'
        PROJECT = 'pc-web-front'
        IMAGE_NAME = 'pc-web-front-image'
        HARBOR_CREDS = 'harbor-credentials'
        DOCKER_IMAGE_TAG = "${env.BUILD_NUMBER}"
    }
    stages {
        stage('Start') {
            steps {
                script {
                    echo "üöÄ Pipeline b·∫Øt ƒë·∫ßu ch·∫°y!"
                }
            }
        }
        stage('Checkout Source Code') {
            steps {
                script {
                    echo "üì• ƒêang clone repository source code..."
                    git url: 'https://github.com/tierik-bjornson/pc-web-front.git', branch: 'main'
                    echo "‚úÖ Clone source code th√†nh c√¥ng!"
                }
            }
        }
        stage('Install Dependencies') {
            steps {
                script {
                    def directories = ['admin/src', 'user/src']
                    for (dir in directories) {
                        dir("${dir}") {
                            if (fileExists('package.json')) {
                                echo "üì¶ C√†i ƒë·∫∑t dependencies trong ${dir}..."
                                sh 'npm install'
                            } else {
                                echo "‚ö† Kh√¥ng t√¨m th·∫•y package.json trong ${dir}, b·ªè qua c√†i ƒë·∫∑t."
                            }
                        }
                    }
                    echo "‚úÖ C√†i ƒë·∫∑t dependencies ho√†n t·∫•t!"
                }
            }
        }
        stage('Build') {
            steps {
                script {
                    def directories = ['admin/src', 'user/src']
                    for (dir in directories) {
                        dir("${dir}") {
                            if (fileExists('package.json')) {
                                echo "üèó Build d·ª± √°n trong ${dir}..."
                                sh 'npm run build --prod'
                            } else {
                                echo "‚ö† Kh√¥ng t√¨m th·∫•y package.json trong ${dir}, b·ªè qua build."
                            }
                        }
                    }
                    echo "‚úÖ Build ho√†n t·∫•t!"
                }
            }
        }
        stage('Test') {
            steps {
                script {
                    def directories = ['admin/src', 'user/src']
                    for (dir in directories) {
                        dir("${dir}") {
                            if (fileExists('package.json')) {
                                echo "üß™ Ch·∫°y test trong ${dir}..."
                                sh 'npm run test || echo "‚ö† Kh√¥ng c√≥ test n√†o, b·ªè qua..."'
                            } else {
                                echo "‚ö† Kh√¥ng t√¨m th·∫•y package.json trong ${dir}, b·ªè qua test."
                            }
                        }
                    }
                    echo "‚úÖ Test ho√†n t·∫•t!"
                }
            }
        }
        stage('Cleanup') {
            steps {
                script {
                    echo "üßπ D·ªçn d·∫πp Docker image..."
                    sh "docker rmi ${REGISTRY}/${PROJECT}/${IMAGE_NAME}:${DOCKER_IMAGE_TAG} || true"
                    echo "‚úÖ D·ªçn d·∫πp ho√†n t·∫•t!"
                }
            }
        }
    }
    post {
        success {
            echo 'üéâ Build v√† push l√™n Harbor th√†nh c√¥ng!'
        }
        failure {
            echo '‚ùå Build th·∫•t b·∫°i. Ki·ªÉm tra logs ƒë·ªÉ xem chi ti·∫øt.'
        }
    }
}
