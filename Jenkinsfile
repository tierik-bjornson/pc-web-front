pipeline {
    agent any
    tools {
        nodejs "Node18"
    }
    environment {
        REGISTRY = 'localhost:80'
        PROJECT = 'pc-web-front'
        IMAGE_NAME = 'pc-web-front-image'
        HARBOR_CREDS = 'harbor-credentials'
        DOCKER_IMAGE_TAG = "${env.BUILD_NUMBER}"
    }
    stages {
        stage('Start') {
            steps {
                script {
                    echo "üöÄ Pipeline b·∫Øt ƒë·∫ßu ch·∫°y!"
                }
            }
        }
        stage('Checkout Source Code') {
            steps {
                script {
                    echo "üîÑ ƒêang clone repository source code..."
                    git url: 'https://github.com/tierik-bjornson/pc-web-front.git', branch: 'main', depth: 1
                    sh 'ls -la'
                    echo "‚úÖ Clone source code th√†nh c√¥ng!"
                }
            }
        }
        stage('Check Directories') {
            steps {
                script {
                    echo "üìÇ Ki·ªÉm tra th∆∞ m·ª•c..."
                    sh 'ls -la'
                    sh 'ls -la admin || echo "‚ö†Ô∏è Th∆∞ m·ª•c admin kh√¥ng t·ªìn t·∫°i!"'
                    sh 'ls -la user || echo "‚ö†Ô∏è Th∆∞ m·ª•c user kh√¥ng t·ªìn t·∫°i!"'
                }
            }
        }
        stage('Install Dependencies') {
            steps {
                script {
                    echo "üì¶ C√†i ƒë·∫∑t dependencies..."
                    dir('admin') {
                        sh 'ls -la && npm install'
                    }
                    dir('user') {
                        sh 'ls -la && npm install'
                    }
                    echo "‚úÖ C√†i ƒë·∫∑t ho√†n t·∫•t!"
                }
            }
        }
        stage('Build') {
            steps {
                script {
                    echo "üõ† B·∫Øt ƒë·∫ßu build..."
                    dir('admin') {
                        sh 'npm run build --prod'
                    }
                    dir('user') {
                        sh 'npm run build --prod'
                    }
                    echo "‚úÖ Build ho√†n t·∫•t!"
                }
            }
        }
        stage('Test') {
            steps {
                script {
                    echo "üß™ Ch·∫°y test..."
                    dir('admin') {
                        sh 'npm run test || echo "‚ö†Ô∏è No tests specified, skipping..."'
                    }
                    dir('user') {
                        sh 'npm run test || echo "‚ö†Ô∏è No tests specified, skipping..."'
                    }
                    echo "‚úÖ Test xong!"
                }
            }
        }
      
        stage('Cleanup') {
            steps {
                script {
                    echo "üßπ D·ªçn d·∫πp Docker image..."
                    sh "docker rmi ${REGISTRY}/${PROJECT}/${IMAGE_NAME}:${DOCKER_IMAGE_TAG} || true"
                    echo "‚úÖ D·ªçn d·∫πp ho√†n t·∫•t!"
                }
            }
        }
    }
    post {
        success {
            echo 'üéâ Build v√† push l√™n Harbor th√†nh c√¥ng! Repo deploy ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t.'
        }
        failure {
            echo '‚ùå Build th·∫•t b·∫°i. Ki·ªÉm tra logs ƒë·ªÉ xem chi ti·∫øt.'
        }
    }
}

